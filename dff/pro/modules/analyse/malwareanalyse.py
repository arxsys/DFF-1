# Copyright (C) 2009-2011 ArxSys
# This program is free software, distributed under the terms of
# the GNU General Public License Version 2. See the LICENSE file
# at the top of the source tree.
#  
# See http://www.digital-forensic.org for more information about this
# project. Please do not directly contact any of the maintainers of
# DFF for assistance; the project provides a web site, mailing lists
# and IRC channels for your use.
# 
# Author(s):
#  Solal Jacob <sja@digital-forensic.org>
# 
__dff_module_malware_analyse_version__ = "1.0.0"

from dff.api.types.libtypes import Argument, typeId
from dff.api.module.module import Module

from dff.modules.analyse import Analyse

class MalwareAnalyse(Analyse):
  def __init__(self):
      Analyse.__init__(self, "Malware Analyse")
     
  def start(self, args):
      try:
        root = args["root"].value()
      except IndexError:
	root = self.vfs.getnode('/')
      clamd = self.moduleProcessusManager.get('clamdscan')
      if clamd:
	self.searchesResults["Malware"] = clamd.nodes(root)

class malwareanalyse(Module): 
  """This analyse script search node tagged as malware"""
  def __init__(self):
    Module.__init__(self, "Malware Analyse", MalwareAnalyse)
    self.conf.addArgument({"name": "root",
			   "description" : "Root from where the analysis will start",
			   "input" : Argument.Required|Argument.Single|typeId.Node})
    self.tags = "Analyse"
    self.icon = ":virus"
    self.depends = ["File systems", "partition", "clamdscan"]
    self.flags = ["gui"]
